# GitHub Actions 工作流：构建 Docker 镜像并部署到 AWS ECS
name: deploy-ecs
on:
  push:
    branches: [main] # 修改为你的发布分支名称

# 配置 OIDC 权限，用于无密钥访问 AWS
permissions:
  id-token: write # 允许获取 OIDC token
  contents: read # 允许读取仓库内容

# 环境变量配置 - 基于你的实际 AWS 资源
env:
  AWS_REGION: us-east-2
  ECR_REPO: edge-ems
  ECS_CLUSTER: your-ecs-cluster-name # 需要替换为你的实际集群名称
  ECS_SERVICE: your-ecs-service-name # 需要替换为你的实际服务名称
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 如果需要先打前端/Node 构建，请在这里执行
      # - uses: actions/setup-node@v4
      #   with: { node-version: 20, cache: 'npm' }
      # - run: npm ci && npm run build

      # 使用 OIDC 配置 AWS 凭证（无需存储密钥）
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # 需要创建 GitHub OIDC 角色
          role-to-assume: arn:aws:iam::985539760410:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      # 登录到 Amazon ECR
      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 构建 Docker 镜像并推送到 ECR
      - name: Build & Push image
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
          IMAGE_URI: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPO }}
          TAG: ${{ github.sha }} # 使用 git commit SHA 作为镜像标签
        run: |
          # 构建镜像并打上 commit SHA 标签
          docker build -t $IMAGE_URI:$TAG .
          docker push $IMAGE_URI:$TAG
          # 同时打上 latest 标签
          docker tag  $IMAGE_URI:$TAG $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      # 渲染 ECS 任务定义，注入新的镜像 URI
      - name: Render task definition (inject new image)
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: taskdef.json # 修改为你的任务定义文件路径
          container-name: edge-ems # 匹配 taskdef.json 中的容器名称
          image: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}

      # 部署到 ECS（滚动更新）
      - name: Deploy to ECS (rolling update)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true # 等待服务稳定后才完成部署
