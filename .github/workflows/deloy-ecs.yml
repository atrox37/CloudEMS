name: Deploy to ECS (EC2 + bridge, AccessKey)

on:
  workflow_dispatch:
  push:
    branches: ['main']

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  ECR_REPO: ${{ vars.ECR_REPO }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  IMAGE_TAG: ${{ github.sha }}
  CONTAINER_NAME: 'edge-ems'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod # 如未使用 Environments，可删除此行
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 用 Access Key 配置 AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names "${ECR_REPO}" >/dev/null 2>&1 \
          || aws ecr create-repository --repository-name "${ECR_REPO}"

      - name: Build and push image
        run: |
          IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}"
          docker build -t "${IMAGE_URI}" .
          docker push "${IMAGE_URI}"
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV

      - name: Download current task definition from running service
        run: |
          TD_ARN=$(aws ecs describe-services --cluster "$ECS_CLUSTER" --services "$ECS_SERVICE" \
                   --query 'services[0].taskDefinition' --output text)
          aws ecs describe-task-definition --task-definition "$TD_ARN" \
            --query 'taskDefinition' > taskdef.json
          echo "Current TD: $TD_ARN"

      - name: Update container image in task definition (bridge-compatible)
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          # 确保 networkMode 仍为 bridge；仅替换镜像，不动端口映射与日志等其它设置
          cat taskdef.json | \
          jq --arg IMG "$IMAGE_URI" --arg NAME "$CONTAINER_NAME" '
            .containerDefinitions |=
            map(if .name == $NAME then .image = $IMG else . end)
          ' > taskdef.updated.json

      - name: Register new task definition revision
        id: register
        run: |
          NEW_TD=$(aws ecs register-task-definition \
            --cli-input-json file://taskdef.updated.json \
            --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "NEW_TD=${NEW_TD}" >> $GITHUB_ENV
          echo "Registered: ${NEW_TD}"

      - name: Update ECS service to new task definition
        run: |
          aws ecs update-service \
            --cluster "${ECS_CLUSTER}" \
            --service "${ECS_SERVICE}" \
            --task-definition "${NEW_TD}" \
            --force-new-deployment

      - name: Wait for service stability
        run: |
          aws ecs wait services-stable --cluster "${ECS_CLUSTER}" --services "${ECS_SERVICE}"
          echo "Service is stable."
